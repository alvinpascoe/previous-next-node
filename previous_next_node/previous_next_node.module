<?php

/**
 * Prev Next Module utility function
 */
function previous_next_node_pn_node($node, $mode = 'n') {
  // If the Previous/Next API's helper function does
  // not exist, exit function.
  if (!function_exists('prev_next_nid')) {
    return NULL;
  }

  // Depending on the $mode, retrieve either the
  // previous or next NID.
  switch($mode) {
    case 'p':
      $n_nid = prev_next_nid($node->nid, 'prev');
      $link_text = 'previous';
      break;

    case 'n':
      $n_nid = prev_next_nid($node->nid, 'next');
      $link_text = 'next';
      break;

    default:
      return NULL;
  }

  // If we obtained a NID.
  if ($n_nid) {
    $n_node = node_load($n_nid);

    $options = array(
      'attributes' => array('class' => 'thumbnail'),
      'html'  => TRUE,
    );

    switch($n_node->type) {
      // For image nodes only.
      case 'image':
        // This is an image node, get the thumbnail
        $html = l(image_display($n_node, 'thumbnail'), "node/$n_nid", $options);
        $html .= l($link_text, "node/$n_nid", array('html' => TRUE));
        return $html;

      // For video nodes only.
      case 'video':
        foreach ($n_node->files as $fid => $file) {
          $html  = '<img src="' . base_path() . $file->filepath;
          $html .= '" alt="' . $n_node->title;
          $html .= '" title="' . $n_node->title;
          $html .= '" class="image image-thumbnail" />';
          $img_html = l($html, "node/$n_nid", $options);
          $text_html = l($link_text, "node/$n_nid", array('html' => TRUE));
          return $img_html . $text_html;
        }

      // For all other nodes.
      default:
        // Generate a non-ajax and ajax link, using the appropriate NID and link text.
        $prettyUrl = url('node/'.$n_nid);
        $text_html = l($link_text, "node/$n_nid", array('html' => TRUE, 'attributes' => array('class' => 'no-js')));
        $text_html .= l($link_text, "/blog/ajax/nojs/$n_nid", array('html' => TRUE, 'attributes' => array('class' => 'use-ajax', 'data-node' => $n_nid, 'data-url' => $prettyUrl)));
        return $text_html;
    }

  }
}
